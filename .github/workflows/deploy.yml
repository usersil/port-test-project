name: UPSERT workflow
on:
  workflow_dispatch:
    inputs:
      api_version:
        type: string
      kind:
        type: string
      name:
        type: string
      bucketname:
        type: string
      region:
        type: string
      port_payload:
        required: true
        description: Port's payload, including details for who triggered the action and
          general context (blueprint, run id, etc...)
        type: string
jobs:
  create-entity-in-port-and-update-run:
    runs-on: ubuntu-latest
    steps:
      - name: UPSERT Entity
        uses: port-labs/port-github-action@v1
        with:
          identifier: some_identifier
          title: Some Title
          team: "[]"
          icon: DefaultBlueprint
          blueprint: s3_bucket
          properties: |-
            {
              "arn": "string",
              "encryption": [],
              "lifecycleRules": [],
              "link": "https://example.com",
              "publicAccess": {
                "a": 1,
                "b": 2
              },
              "regionalDomainName": "string",
              "tags": [],
              "versioningStatus": "Enabled"
            }
          relations: "{}"
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: UPSERT
          runId: ${{fromJson(inputs.port_payload).context.runId}}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Generate Crossplane Claim YAML
        run: |
          # Replace this with your script to generate the Crossplane claim YAML content
          
          api_version="${{ github.event.inputs.api_version }}"
          kind="${{ github.event.inputs.kind }}"
          name="${{ github.event.inputs.name }}"
          bucket_name="${{ github.event.inputs.bucketname }}"
          region="${{ github.event.inputs.region }}"
          cat <<EOF > "${name}.yaml"
          apiVersion: ${api_version}
          kind: ${kind}
          metadata:
            name: ${bucket_name}
          spec:
            forProvider:
              region: ${region}
              tags:
                project: CCP
                env: dev
                aws: eks
            providerConfigRef:
              name: awsconfig
          EOF
      - name: Commit and push changes
        run: |
          bucket_name="${{ github.event.inputs.bucketname }}"
          git config user.name "JagadeeshJ03"
          git config user.email "jjagadeeshgouda1996@gmail.com"
          git add "${bucket_name}.yaml"
          git commit -m "Generate Crossplane Claim YAML testing file"
          git remote add origin_with_token https://$GITHUB_ACTOR:${{ secrets.PAT }}@github.com/usersil/port-test-projrct.git
          git push
      - name: Create a log message
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{fromJson(inputs.port_payload).context.runId}}
          logMessage: An example of a log message
      - name: Update action run status
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{fromJson(inputs.port_payload).context.runId}}
          status: SUCCESS
          logMessage: Workflow completed successfully
